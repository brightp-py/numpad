
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftOP0leftOP1leftOP2leftOP3rightMINA D DOT M N NUMBER S ZEROvar : M NUMBER\n           | M ZERO NUMBER\n    op0 : DOT DOT\n           | DOT S\n           | DOT A\n    op1 : S\n           | A\n    op2 : D\n           | M\n    op3 : D A\n           | M A\n           | D S\n           | M S\n    set : N Mif : N Delse : S Dwhile : N A Dlist_open : D DOTlist_open : list_open expr DOT\n                 | list_open expr DOT Nlist : list_open expr D DOTlist : D DOT DOT Dparamlist : N NUMBER DOTparamlist : N NUMBER DOT DOT NUMBER paramlistexpr : NUMBER\n            | ZERO NUMBER   %prec MIN\n            | ZERO\n            | var\n            | list\n            | expr op0 expr %prec OP0\n            | expr op1 expr %prec OP1\n            | expr op2 expr %prec OP2\n            | expr op3 expr %prec OP3\n    stmt_def : set NUMBER DOT paramlist blockstmt_set : set NUMBER DOT exprstmt_ind_open : set NUMBER D NUMBER\n                     | set NUMBER D ZERO\n                     | set NUMBER D varstmt_ind_open : stmt_ind_open D NUMBER\n                     | stmt_ind_open D ZERO\n                     | stmt_ind_open D varstmt_ind : stmt_ind_open DOT exprstmt_ret : set ZERO ZERO DOT exprstmt_if : if expr blockstmt_elif : stmt_if else blockstmt_while : while expr blockstmt : stmt_def\n            | stmt_set\n            | stmt_ret\n            | stmt_if\n            | stmt_elif\n            | stmt_while\n            | stmt_ind\n    open_block : stmtopen_block : open_block stmtblock : open_block N\n    program : blockprogram : program N'
    
_lr_action_items = {'N':([0,1,2,4,5,6,7,8,9,10,11,12,17,21,22,23,27,28,29,30,31,35,39,40,41,44,54,55,59,60,64,65,71,72,73,74,82,84,86,88,89,91,92,94,95,],[3,17,-57,21,-54,-47,-48,-49,-50,-51,-52,-53,-58,-56,-55,3,3,-25,-27,-28,-29,3,-45,-16,66,-44,-26,-1,-46,-42,3,-35,-30,-31,-32,-33,-2,90,-34,-43,-21,-22,-23,66,-24,]),'$end':([1,2,17,21,],[0,-57,-58,-56,]),'M':([3,14,15,19,21,27,28,29,30,31,33,35,36,37,38,41,42,45,46,47,48,50,51,52,53,54,55,57,58,60,65,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,91,],[18,32,32,-15,18,53,-25,-27,-28,-29,32,53,32,32,-17,32,32,32,32,32,32,-6,-7,-8,-9,-26,-1,53,-18,53,53,32,-30,-31,-32,-33,-3,-4,-5,-10,-12,-11,-13,-2,-8,-19,53,-21,-20,-22,]),'D':([3,14,15,16,19,20,21,24,25,27,28,29,30,31,33,35,36,38,41,45,46,47,48,50,51,52,53,54,55,57,58,60,61,62,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,],[19,34,34,37,-15,38,19,40,42,52,-25,-27,-28,-29,34,52,34,-17,34,34,34,34,34,-6,-7,-8,-9,-26,-1,83,-18,52,-39,-40,-41,52,-36,-37,-38,34,-30,-31,-32,-33,-3,-4,-5,-10,-12,-11,-13,-2,-8,-19,91,52,-21,-20,-22,]),'A':([3,21,27,28,29,30,31,35,49,52,53,54,55,57,60,65,71,72,73,74,82,83,84,88,89,91,],[20,20,51,-25,-27,-28,-29,51,77,78,80,-26,-1,51,51,51,-30,-31,-32,-33,-2,78,77,51,-21,-22,]),'S':([9,21,27,28,29,30,31,35,44,49,52,53,54,55,57,60,65,71,72,73,74,82,83,84,88,89,91,],[24,-56,50,-25,-27,-28,-29,50,-44,76,79,81,-26,-1,50,50,50,-30,-31,-32,-33,-2,79,76,50,-21,-22,]),'NUMBER':([13,14,15,18,19,29,32,33,36,37,38,41,42,45,46,47,48,50,51,52,53,56,58,66,70,75,76,77,78,79,80,81,83,84,90,93,],[25,28,28,-14,-15,54,55,28,28,61,-17,28,67,28,28,28,28,-6,-7,-8,-9,82,-18,87,28,-3,-4,-5,-10,-12,-11,-13,-8,-19,-20,94,]),'ZERO':([13,14,15,18,19,26,32,33,36,37,38,41,42,45,46,47,48,50,51,52,53,58,70,75,76,77,78,79,80,81,83,84,90,],[26,29,29,-14,-15,43,56,29,29,62,-17,29,68,29,29,29,29,-6,-7,-8,-9,-18,29,-3,-4,-5,-10,-12,-11,-13,-8,-19,-20,]),'DOT':([16,25,27,28,29,30,31,34,35,43,49,54,55,57,58,60,61,62,63,65,67,68,69,71,72,73,74,82,83,84,87,88,89,91,92,],[36,41,49,-25,-27,-28,-29,58,49,70,75,-26,-1,84,85,49,-39,-40,-41,49,-36,-37,-38,-30,-31,-32,-33,-2,89,75,92,49,-21,-22,93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,23,27,35,64,],[2,39,44,59,86,]),'open_block':([0,23,27,35,64,],[4,4,4,4,4,]),'stmt':([0,4,23,27,35,64,],[5,22,5,5,5,5,]),'stmt_def':([0,4,23,27,35,64,],[6,6,6,6,6,6,]),'stmt_set':([0,4,23,27,35,64,],[7,7,7,7,7,7,]),'stmt_ret':([0,4,23,27,35,64,],[8,8,8,8,8,8,]),'stmt_if':([0,4,23,27,35,64,],[9,9,9,9,9,9,]),'stmt_elif':([0,4,23,27,35,64,],[10,10,10,10,10,10,]),'stmt_while':([0,4,23,27,35,64,],[11,11,11,11,11,11,]),'stmt_ind':([0,4,23,27,35,64,],[12,12,12,12,12,12,]),'set':([0,4,23,27,35,64,],[13,13,13,13,13,13,]),'if':([0,4,23,27,35,64,],[14,14,14,14,14,14,]),'while':([0,4,23,27,35,64,],[15,15,15,15,15,15,]),'stmt_ind_open':([0,4,23,27,35,64,],[16,16,16,16,16,16,]),'else':([9,],[23,]),'expr':([14,15,33,36,41,45,46,47,48,70,],[27,35,57,60,65,71,72,73,74,88,]),'var':([14,15,33,36,37,41,42,45,46,47,48,70,],[30,30,30,30,63,30,69,30,30,30,30,30,]),'list':([14,15,33,36,41,45,46,47,48,70,],[31,31,31,31,31,31,31,31,31,31,]),'list_open':([14,15,33,36,41,45,46,47,48,70,],[33,33,33,33,33,33,33,33,33,33,]),'op0':([27,35,57,60,65,71,72,73,74,88,],[45,45,45,45,45,45,45,45,45,45,]),'op1':([27,35,57,60,65,71,72,73,74,88,],[46,46,46,46,46,46,46,46,46,46,]),'op2':([27,35,57,60,65,71,72,73,74,88,],[47,47,47,47,47,47,47,47,47,47,]),'op3':([27,35,57,60,65,71,72,73,74,88,],[48,48,48,48,48,48,48,48,48,48,]),'paramlist':([41,94,],[64,95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('var -> M NUMBER','var',2,'p_var','numpadparse.py',18),
  ('var -> M ZERO NUMBER','var',3,'p_var','numpadparse.py',19),
  ('op0 -> DOT DOT','op0',2,'p_op_0','numpadparse.py',24),
  ('op0 -> DOT S','op0',2,'p_op_0','numpadparse.py',25),
  ('op0 -> DOT A','op0',2,'p_op_0','numpadparse.py',26),
  ('op1 -> S','op1',1,'p_op_1','numpadparse.py',31),
  ('op1 -> A','op1',1,'p_op_1','numpadparse.py',32),
  ('op2 -> D','op2',1,'p_op_2','numpadparse.py',37),
  ('op2 -> M','op2',1,'p_op_2','numpadparse.py',38),
  ('op3 -> D A','op3',2,'p_op_3','numpadparse.py',43),
  ('op3 -> M A','op3',2,'p_op_3','numpadparse.py',44),
  ('op3 -> D S','op3',2,'p_op_3','numpadparse.py',45),
  ('op3 -> M S','op3',2,'p_op_3','numpadparse.py',46),
  ('set -> N M','set',2,'p_set','numpadparse.py',51),
  ('if -> N D','if',2,'p_if','numpadparse.py',55),
  ('else -> S D','else',2,'p_else','numpadparse.py',59),
  ('while -> N A D','while',3,'p_while','numpadparse.py',63),
  ('list_open -> D DOT','list_open',2,'p_list_create','numpadparse.py',67),
  ('list_open -> list_open expr DOT','list_open',3,'p_list_append','numpadparse.py',71),
  ('list_open -> list_open expr DOT N','list_open',4,'p_list_append','numpadparse.py',72),
  ('list -> list_open expr D DOT','list',4,'p_list_close','numpadparse.py',76),
  ('list -> D DOT DOT D','list',4,'p_empty_list','numpadparse.py',80),
  ('paramlist -> N NUMBER DOT','paramlist',3,'p_param_create','numpadparse.py',84),
  ('paramlist -> N NUMBER DOT DOT NUMBER paramlist','paramlist',6,'p_param_def','numpadparse.py',88),
  ('expr -> NUMBER','expr',1,'p_expr','numpadparse.py',93),
  ('expr -> ZERO NUMBER','expr',2,'p_expr','numpadparse.py',94),
  ('expr -> ZERO','expr',1,'p_expr','numpadparse.py',95),
  ('expr -> var','expr',1,'p_expr','numpadparse.py',96),
  ('expr -> list','expr',1,'p_expr','numpadparse.py',97),
  ('expr -> expr op0 expr','expr',3,'p_expr','numpadparse.py',98),
  ('expr -> expr op1 expr','expr',3,'p_expr','numpadparse.py',99),
  ('expr -> expr op2 expr','expr',3,'p_expr','numpadparse.py',100),
  ('expr -> expr op3 expr','expr',3,'p_expr','numpadparse.py',101),
  ('stmt_def -> set NUMBER DOT paramlist block','stmt_def',5,'p_function_def','numpadparse.py',111),
  ('stmt_set -> set NUMBER DOT expr','stmt_set',4,'p_stmt_set','numpadparse.py',115),
  ('stmt_ind_open -> set NUMBER D NUMBER','stmt_ind_open',4,'p_stmt_set_index','numpadparse.py',119),
  ('stmt_ind_open -> set NUMBER D ZERO','stmt_ind_open',4,'p_stmt_set_index','numpadparse.py',120),
  ('stmt_ind_open -> set NUMBER D var','stmt_ind_open',4,'p_stmt_set_index','numpadparse.py',121),
  ('stmt_ind_open -> stmt_ind_open D NUMBER','stmt_ind_open',3,'p_stmt_set_sub_index','numpadparse.py',125),
  ('stmt_ind_open -> stmt_ind_open D ZERO','stmt_ind_open',3,'p_stmt_set_sub_index','numpadparse.py',126),
  ('stmt_ind_open -> stmt_ind_open D var','stmt_ind_open',3,'p_stmt_set_sub_index','numpadparse.py',127),
  ('stmt_ind -> stmt_ind_open DOT expr','stmt_ind',3,'p_stmt_set_index_close','numpadparse.py',132),
  ('stmt_ret -> set ZERO ZERO DOT expr','stmt_ret',5,'p_stmt_set_return','numpadparse.py',137),
  ('stmt_if -> if expr block','stmt_if',3,'p_stmt_if','numpadparse.py',141),
  ('stmt_elif -> stmt_if else block','stmt_elif',3,'p_stmt_else','numpadparse.py',145),
  ('stmt_while -> while expr block','stmt_while',3,'p_stmt_while','numpadparse.py',150),
  ('stmt -> stmt_def','stmt',1,'p_stmt','numpadparse.py',154),
  ('stmt -> stmt_set','stmt',1,'p_stmt','numpadparse.py',155),
  ('stmt -> stmt_ret','stmt',1,'p_stmt','numpadparse.py',156),
  ('stmt -> stmt_if','stmt',1,'p_stmt','numpadparse.py',157),
  ('stmt -> stmt_elif','stmt',1,'p_stmt','numpadparse.py',158),
  ('stmt -> stmt_while','stmt',1,'p_stmt','numpadparse.py',159),
  ('stmt -> stmt_ind','stmt',1,'p_stmt','numpadparse.py',160),
  ('open_block -> stmt','open_block',1,'p_create_block','numpadparse.py',165),
  ('open_block -> open_block stmt','open_block',2,'p_append_block','numpadparse.py',170),
  ('block -> open_block N','block',2,'p_close_block','numpadparse.py',175),
  ('program -> block','program',1,'p_program','numpadparse.py',180),
  ('program -> program N','program',2,'p_extra_newlines','numpadparse.py',184),
]
